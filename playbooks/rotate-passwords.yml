---
- name: Rotate Windows Service Account Passwords using Vault
  hosts: windows_servers
  gather_facts: false
  vars:
    # SSH connection using proven working configuration
    ansible_connection: ssh
    ansible_shell_type: cmd
    ansible_port: 22
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
    
    # Service configuration - can be overridden via extra variables
    service_account: "{{ vault_service_account | default('hashicorp.local\\svc-demo') }}"
    dependent_services: "{{ services_to_restart | default(['DemoHelloWorldService']) }}"
    vault_path: "{{ vault_ldap_path | default('ldap/creds/service-account-role') }}"
    
  tasks:
    - name: Get new credentials from Vault
      community.hashi_vault.vault_read:
        url: "{{ vault_url }}"
        auth_method: "{{ vault_auth_method | default('token') }}"
        token: "{{ vault_token | default(omit) }}"
        path: "{{ vault_path }}"
      register: vault_credentials
      delegate_to: localhost
      run_once: true

    - name: Extract new password from Vault response
      ansible.builtin.set_fact:
        new_username: "{{ vault_credentials.data.data.username }}"
        new_password: "{{ vault_credentials.data.data.password }}"
      delegate_to: localhost
      run_once: true

    - name: Display credential info (username only for security)
      ansible.builtin.debug:
        msg: "Retrieved new credentials for user: {{ new_username }}"

    - name: Check current service status before password rotation
      ansible.builtin.raw: |
        powershell.exe -Command "Get-Service -Name '{{ item }}' | Select-Object Name, Status | ConvertTo-Json"
      loop: "{{ dependent_services }}"
      register: pre_rotation_status
      changed_when: false

    - name: Display pre-rotation service status
      ansible.builtin.debug:
        msg: "Before rotation: {{ item.item }} is {{ (item.stdout | from_json).Status }}"
      loop: "{{ pre_rotation_status.results }}"
      when: item.stdout is defined

    - name: Update service account credentials using NSSM
      ansible.builtin.raw: |
        powershell.exe -Command "
        $NSSMPath = 'C:\nssm\nssm.exe';
        if (Test-Path $NSSMPath) {
          & $NSSMPath set '{{ item }}' ObjectName '{{ service_account }}' '{{ new_password }}';
          Write-Host 'Updated NSSM service {{ item }} credentials'
        } else {
          Write-Host 'NSSM not found, skipping service {{ item }}'
        }
        "
      loop: "{{ dependent_services }}"
      register: nssm_update_result
      no_log: true

    - name: Restart dependent services to apply new credentials
      ansible.builtin.raw: |
        powershell.exe -Command "Restart-Service -Name '{{ item }}'; Write-Host 'Restarted service: {{ item }}'"
      loop: "{{ dependent_services }}"

    - name: Verify service status after restart
      ansible.builtin.raw: |
        powershell.exe -Command "Get-Service -Name '{{ item }}' | Select-Object Name, Status | ConvertTo-Json"
      loop: "{{ dependent_services }}"
      register: post_rotation_status
      changed_when: false

    - name: Display post-rotation service status
      ansible.builtin.debug:
        msg: "After rotation: {{ item.item }} is {{ (item.stdout | from_json).Status }}"
      loop: "{{ post_rotation_status.results }}"
      when: item.stdout is defined

  post_tasks:
    - name: Password rotation summary
      ansible.builtin.debug:
        msg: 
          - "Password rotation completed successfully"
          - "Service account: {{ service_account }}"
          - "Services restarted: {{ dependent_services | join(', ') }}"
          - "Host: {{ inventory_hostname }}"
