---
# tasks file for windows_service_management

- name: Gather service information
  ansible.windows.win_service:
    name: "{{ item }}"
  loop: "{{ windows_service_management_services_to_manage }}"
  register: service_info
  when: windows_service_management_operation == "status" or windows_service_management_operation == "report"

- name: Start Windows services
  ansible.windows.win_service:
    name: "{{ item }}"
    state: started
    start_mode: auto
  loop: "{{ windows_service_management_services_to_manage }}"
  register: start_result
  when: windows_service_management_operation == "start"

- name: Stop Windows services
  ansible.windows.win_service:
    name: "{{ item }}"
    state: stopped
  loop: "{{ windows_service_management_services_to_manage }}"
  register: stop_result
  when: windows_service_management_operation == "stop"

- name: Restart Windows services
  ansible.windows.win_service:
    name: "{{ item }}"
    state: restarted
  loop: "{{ windows_service_management_services_to_manage }}"
  register: restart_result
  when: windows_service_management_operation == "restart"

- name: Set service startup type
  ansible.windows.win_service:
    name: "{{ item }}"
    start_mode: "{{ windows_service_management_startup_type | default('auto') }}"
  loop: "{{ windows_service_management_services_to_manage }}"
  when: windows_service_management_operation == "configure" and windows_service_management_startup_type is defined

- name: Generate service status report
  template:
    src: service_report.j2
    dest: "{{ windows_service_management_report_output_path | default('/tmp/service_report.txt') }}"
  delegate_to: localhost
  when: windows_service_management_operation == "report" and windows_service_management_generate_report | default(false)

- name: Display service status
  debug:
    msg: "Service {{ item.item }} is {{ item.state }} (Start Mode: {{ item.start_mode }})"
  loop: "{{ service_info.results }}"
  when: windows_service_management_operation == "status" and service_info is defined
