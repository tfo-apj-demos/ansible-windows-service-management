---
# roles/vault_credential_retrieval/tasks/main.yml

# Vault connectivity and authentication checks
- name: Ensure Vault address is defined
  ansible.builtin.assert:
    that:
      - vault_addr is defined
      - vault_addr | length > 0
    fail_msg: "Vault address is not set or is empty!"

- name: Ensure Vault authentication credentials are defined
  ansible.builtin.assert:
    that:
      - role_id is defined
      - role_id | length > 0
      - secret_id is defined
      - secret_id | length > 0
    fail_msg: "Vault AppRole authentication credentials (role_id or secret_id) are not set!"

- name: Test Vault connectivity
  ansible.builtin.uri:
    url: "{{ vault_addr }}/v1/sys/health"
    method: GET
    return_content: true
    validate_certs: true
    ca_path: "/etc/pki/ca-trust/source/anchors/vault-ca.crt"
    status_code: [200, 473]  # Accept both active (200) and standby (473) status
  register: vault_health
  retries: 3
  delay: 5

- name: Authenticate with Vault using AppRole to get token
  ansible.builtin.uri:
    url: "{{ vault_addr }}/v1/auth/approle/login"
    method: POST
    body_format: json
    body:
      role_id: "{{ role_id }}"
      secret_id: "{{ secret_id }}"
    validate_certs: true
    ca_path: "/etc/pki/ca-trust/source/anchors/vault-ca.crt"
    status_code: [200]
  register: vault_auth_result

- name: Extract Vault token from authentication response
  ansible.builtin.set_fact:
    vault_token: "{{ vault_auth_result.json.auth.client_token }}"

- name: Rotate static role password to generate fresh credentials
  ansible.builtin.uri:
    url: "{{ vault_addr }}/v1/{{ vault_ldap_mount }}/rotate-role/{{ vault_static_role }}"
    method: POST
    headers:
      X-Vault-Token: "{{ vault_token }}"
    validate_certs: true
    ca_path: "/etc/pki/ca-trust/source/anchors/vault-ca.crt"
    status_code: [200, 204]
  register: vault_rotation_result

- name: Display password rotation result
  ansible.builtin.debug:
    msg: "Password rotation completed for role: {{ vault_static_role }}"

- name: Get fresh service account credentials from Vault LDAP static role
  community.hashi_vault.vault_read:
    url: "{{ vault_addr }}"
    path: "{{ vault_ldap_mount }}/static-cred/{{ vault_static_role }}"
    auth_method: approle
    role_id: "{{ role_id }}"
    secret_id: "{{ secret_id }}"
    validate_certs: true
    ca_cert: "/etc/pki/ca-trust/source/anchors/vault-ca.crt"
  register: vault_credentials

- name: Debug Vault response structure
  ansible.builtin.debug:
    msg: "Vault response: {{ vault_credentials }}"

- name: Extract current password from Vault response
  ansible.builtin.set_fact:
    current_username: "{{ vault_credentials.data.data.username }}"
    current_password: "{{ vault_credentials.data.data.password }}"
    last_vault_rotation: "{{ vault_credentials.data.data.last_vault_rotation }}"
    vault_static_role: "{{ vault_static_role }}"

- name: Display fresh credential info (username only for security)
  ansible.builtin.debug:
    msg:
      - "Retrieved fresh credentials after rotation for user: {{ current_username }}"
      - "New rotation timestamp: {{ last_vault_rotation }}"
      - "Rotation period has been reset"
